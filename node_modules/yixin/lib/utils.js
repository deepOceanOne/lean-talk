/**
 * Created by fuzesun on 14-5-12.
 */
var ejs = require('ejs');
var TYPE_TEXT = 'text',
    TYPE_IMAGE = 'image',
    TYPE_VOICE = 'voice',
    TYPE_VIDEO = 'video',
    TYPE_LINK = 'link',
    TYPE_CARD = 'card',
    TYPE_NEWS = 'news';

/*
 * 对返回结果的一层封装，如果遇见易信返回的错误，将返回一个错误
 * 参见：http://dev.yixin.im/wiki/qa/index.php?title=全局返回码说明
 * errcode == 0 时,请求成功.
 *
 *
 */
exports.wrapper = function(callback) {
  return function(res) {
    if(!!res.error || !res.ok) {
      res.error.name = "YinxinAPi";
      res.error.message = "Request failed";
      res.error.code = -2;
      invokeCallback(callback,res.error, res.body, res);
      return;
    }
    if(!!res.body.errcode && res.body.errcode != 0) {
      var error = {};
      error.name = "YinxinAPi";
      error.code = res.body.errcode;
      error.message = res.body.errmsg;
      invokeCallback(callback, error, res.body, res);
      return;
    }

    invokeCallback(callback, null, res.body, res);
  }
};

var invokeCallback = function (cb) {
  if (!!cb && typeof cb === 'function') {
    cb.apply(null, Array.prototype.slice.call(arguments, 1));
  }
};
/*
 * 封装客服信息
 * ```
 * @Param {String} touser 接受信息用户openid
 * @Param {String} msgtype 消息类型
 * @Param {Some} content 发送消息实体
 * ```
 */
var wrapCustomContent = function(touser, msgtype, content) {
  var wrappedContent = {};
  wrappedContent.touser = touser;
  wrappedContent.msgtype = msgtype;
  switch (msgtype) {
  case TYPE_TEXT:
    wrappedContent[msgtype] = {"content": content};
    break;
  case TYPE_CARD:
    wrappedContent[msgtype] = {"card": content};
    break;
  case TYPE_IMAGE:
    wrappedContent[msgtype] = {"media_id": content};
    break;
  case TYPE_VOICE:
    wrappedContent[msgtype] = {"media_id": content};
    break;
  case TYPE_VIDEO:
    wrappedContent[msgtype] = {"media_id": content};
    break;
  case TYPE_LINK:
    wrappedContent[msgtype] = content;
    break;
  case TYPE_NEWS:
    if(Object.prototype.toString.call(content) != '[object Array]') {
      wrappedContent.err = 1;
      wrappedContent.errmsg = "The news content must be array";
      break;
    }
    var len = content.length;
    if(len > 10) {
      content = content.slice(0,10);
    }
    wrappedContent[msgtype] = {"articles": content};
    break;
  default :
    wrappedContent.err = 1;
    wrappedContent.errmsg = "The type is not support";
  }
  return wrappedContent;
};
/*
 * 封装群发消息
 * ```
 * @Param {String} group 分组名
 * @Param {String} msgtype 消息类型: 群发消失仅支持 'text','card','news'
 * @Param {Some} content 消息实体
 */
var wrapGroupContent = function(group, msgtype, content) {
  var wrappedContent = {};
  var _limit = 10;
  wrappedContent.group = group;
  wrappedContent.msgtype = msgtype;
  switch (msgtype) {
  case TYPE_TEXT:
    wrappedContent[msgtype] = {"content": content};
    break;
  case TYPE_CARD:
    wrappedContent[msgtype] = {"card": content};
    break;
  case TYPE_NEWS:
    if(Object.prototype.toString.call(content) != '[object Array]') {
      wrappedContent.err = 1;
      wrappedContent.errmsg = "The news content must be array";
      break;
    }
    var len = content.length;
    if(len > _limit) {
      content = content.slice(0,10);
    }
    wrappedContent[msgtype] = {"articles": content};
    break;
  default :
    wrappedContent.err = 1;
    wrappedContent.errmsg = "The type is not support";
  }
  return wrappedContent;
};


/*!
 * 响应模版
 */
var tpl = ['<xml>',
  '<ToUserName><![CDATA[<%-toUsername%>]]></ToUserName>',
  '<FromUserName><![CDATA[<%-fromUsername%>]]></FromUserName>',
  '<CreateTime><%=createTime%></CreateTime>',
  '<MsgType><![CDATA[<%=msgType%>]]></MsgType>',
  '<% if (msgType === "news") { %>', //图文
  '<ArticleCount><%=content.length%></ArticleCount>',
  '<Articles>',
  '<% content.forEach(function(item){ %>',
  '<item>',
  '<Title><![CDATA[<%-item.title%>]]></Title>',
  '<Description><![CDATA[<%-item.description%>]]></Description>',
  '<PicUrl><![CDATA[<%-item.picUrl || item.picurl || item.pic %>]]></PicUrl>',
  '<Url><![CDATA[<%-item.url%>]]></Url>',
  '</item>',
  '<% }); %>',
  '</Articles>',
  '<% } else if (msgType === "music") { %>', //音乐
  '<Music>',
  '<Description><![CDATA[<%-content.description%>]]></Description>',
  '<MusicUrl><![CDATA[<%-content.musicUrl || content.url %>]]></MusicUrl>',
  '<HQMusicUrl><![CDATA[<%-content.hqMusicUrl || content.hqUrl %>]]></HQMusicUrl>',
  '</Music>',
//  '<% } else if (msgType === "voice") { %>',
//  '<Voice>',
//  '<MediaId><![CDATA[<%-content.mediaId%>]]></MediaId>',
//  '</Voice>',
//  '<% } else if (msgType === "image") { %>',
//  '<Image>',
//  '<MediaId><![CDATA[<%-content.mediaId%>]]></MediaId>',
//  '</Image>',
//  '<% } else if (msgType === "video") { %>',
//  '<Video>',
//  '<MediaId><![CDATA[<%-content.mediaId%>]]></MediaId>',
//  '<ThumbMediaId><![CDATA[<%-content.thumbMediaId%>]]></ThumbMediaId>',
//  '</Video>',
  '<% } else { %>', //文本
  '<Content><![CDATA[<%-content%>]]></Content>',
  '<% } %>',
  '</xml>'].join('');

/*!
 * 编译过后的模版
 */
var compiled = ejs.compile(tpl);

var replyWrapper = function(content, fromUsername, toUsername) {
  var info = {};
  var type = 'text';
  info.content = content || '';
  if (Array.isArray(content)) {
    type = 'news';
  } else if (typeof content === 'object') {
    if (content.hasOwnProperty('type')) {
      type = content.type;
      info.content = content.content;
    } else {
      type = 'music';
    }
  } else {
    type = 'text';
  }
  info.msgType = type;
  info.createTime = new Date().getTime();
  info.toUsername = toUsername;
  info.fromUsername = fromUsername;
  return compiled(info);
};



exports.wrapCustomContent = wrapCustomContent;
exports.wrapGroupContent = wrapGroupContent;
exports.invokeCallback = invokeCallback;
exports.replyWrapper = replyWrapper;