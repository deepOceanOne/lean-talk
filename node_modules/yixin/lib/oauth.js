/**
 * Created by fuzesun on 14-5-12.
 */
var request = require('superagent');
var utils = require('./utils');
var invokeCallback = utils.invokeCallback;
var wrapper = utils.wrapper;
var querystring = require('querystring');

var OAUTH = function(appid, secret) {
  this.appid = appid;
  this.secret = secret;
  this.prefix = 'http://open.plus.yixin.im/connect/oauth2/';
};

var oauth = OAUTH.prototype;

/**
 * 获取授权链接
 * 详情:<http://dev.yixin.im/wiki/qa/index.php?title=易信网页授权接口>
 * Example:
 * ```
 * oauth.getAuthorizeURL('http://www.163.com', 'snsapi_base', 123, false);
 * ```
 * @param {String} redirect 重定向地址
 * @param {String|Array} scope 应用授权作用域
 * @param {Any} state 重定向后会带上state参数，开发者可以填写任意参数值
 * @param {Boolean} isInYixin 是否直接在易信中打开
 * @returns {string} url 授权链接
 */
oauth.getAuthorizeURL = function(redirect, scope, state, isInYixin) {
  var url = this.prefix + 'authorize';
  if(Array.isArray(scope)) {
    scope = scope.join(',');
  }
  var query = {
    appid: this.appid,
    redirect_uri: redirect,
    response_type: 'code',
    scope: scope || 'snsapi_base',
    state: state || ''
  };
  url = url + "?" + querystring.stringify(query);
  if(isInYixin) {
    url += '#yixin_redirect';
  }
  return url;
};

oauth.isAccessTokenExpired = function (expireTime) {
  return new Date().getTime() < expireTime;
};

/**
 * 请求access_token
 * ```
 * Then:
 * - `err` 调用失败时的异常
 * - `data` 调用成功的返回
 * ```
 * data:
 * {
 *   "access_token":"ACCESS_TOKEN",
 *   "expires_in":7200,
 *   "refresh_token":"REFRESH_TOKEN",
 *   "openid":"OPENID",
 *   "scope":"SCOPE"
 * }
 * ```
 * @param {String} code 通过授权链接获取的code
 * @param {Function} then 回调函数
 */
oauth.requestAccessToken = function(code, then) {
  var self = this;
  var url = 'https://api.yixin.im/sns/oauth2/access_token';
  request
    .get(url)
    .query({appid: self.appid, secret: self.secret, code: code, grant_type: 'authorization_code'})
    .end(wrapper(then));
};
/**
 * 使用refresh_token进行刷新access_token, 仅在获取过access_token后使用
 * ```
 * Then:
 * - `err` 调用失败时的异常
 * - `data` 调用成功的返回
 * ```
 * data:
 * {
 *   "access_token":"ACCESS_TOKEN",
 *   "expires_in":7200,
 *   "refresh_token":"REFRESH_TOKEN",
 *   "openid":"OPENID",
 *   "scope":"SCOPE"
 * }
 *```
 * @param {Function} then 回调函数, 获取access_token 后的操作
 */
oauth.refreshAccessToken = function(refreshToken, then) {
  var self = this;
  var url = 'https://api.yixin.im/sns/oauth2/refresh_token';
  request
    .get(url)
    .query({appid: self.appid, grant_type: 'refresh_token', refresh_token: refreshToken})
    .end(wrapper(then));
};

/**
 * 根据openid，获取用户信息。
 * 当access token无效时，自动通过refresh token获取新的access token。然后再获取用户信息
 * Examples:
 * ```
 * api.getUser(openid, callback);
 * ```
 * Callback:
 *
 * - `err`, 获取用户信息出现异常时的异常对象
 * - `data`, 成功时得到的响应结果
 *
 * Result:
 * ```
 * {
 * "subscribe": 1,
 * "openid": "OPENID",
 * "nickname": "NICKNAME",
 * "sex": "sex",
 * "language": "LANG",
 * "city": "city"
 * }
 * ```
 * @Param {String} openid
 * @Param {Function} callback 回调函数
 */
oauth.getUser = function (openid, accessToken, callback) {
  this._getUser(openid, accessToken, callback);
};

oauth._getUser = function (openid, accessToken, callback) {
  var url = 'https://api.yixin.im/sns/userinfo';
  request
    .get(url)
    .query({openid: openid, access_token: accessToken})
    .end(wrapper(callback));
};

module.exports = OAUTH;