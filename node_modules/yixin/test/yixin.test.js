/**
 * Created by fuzesun on 14-5-16.
 */
var should = require('should');
var crypto = require('crypto');
var Yixin = require('../');
var connect = require('connect');
var request = require('supertest');
var support = require('./dependencies');
var utils = require('../lib/utils');
var replyWrapper = utils.replyWrapper;

var app = connect();
var yixin = new Yixin('token');

app.use(connect.query());
app.use('/yixin', yixin.middleware());
app.use(connect.bodyParser());
(function init() {
  yixin.text(function(req, res) {
    var message = req.yixin;
    if(message.Content == 'hi') {
      res.reply('hello');
    }

    if(message.Content == 'news') {
      res.reply([
        {
          title: '图文消息',
          description: '这是图文消息',
          picurl: 'http://c.hiphotos.baidu.com/image/pic/item/9213b07eca806538165fddb695dda144ac3482d9.jpg',
          url: 'www://www.163.com/'
        }
      ]);
    }
  });
})();


describe('yixin.js', function() {

  describe('#Valid Signature', function () {
    it('should be 401', function (done) {
      request(app)
        .get('/yixin')
        .expect(401)
        .expect('Invalid signature', done);
    });

    it('should be 401', function(done) {
      var query = {
        timestamp: new Date().getTime(),
        nonce: parseInt((Math.random() * 10e10), 10),
        echostr: 'fxxk'
      };
      query.signature = 'invalid signature';

      request(app)
        .get('/yixin')
        .query(query)
        .expect(401)
        .expect('Invalid signature', done);
    });

    it('should be 200', function (done) {
      var query = {
        timestamp: new Date().getTime(),
        nonce: parseInt((Math.random() * 10e10), 10),
        echostr: 'fxxk'
      };
      var shasum = crypto.createHash('sha1').update([query.timestamp, 'token', query.nonce].sort().join(''));
      query.signature = shasum.digest('hex');

      request(app)
        .get('/yixin')
        .query(query)
        .expect(200)
        .expect('fxxk', done);
    });
    it('should be 501', function(done) {
      var query = {
        timestamp: new Date().getTime(),
        nonce: parseInt((Math.random() * 10e10), 10),
        echostr: 'fxxk'
      };
      var shasum = crypto.createHash('sha1').update([query.timestamp, 'token', query.nonce].sort().join(''));
      query.signature = shasum.digest('hex');
      request(app)
        .head('/yixin')
        .query(query)
        .expect(501, done);
    });
  });

  describe('#reply', function() {
    describe('##text', function() {
      it('should receive hello', function(done) {
        request(app)
          .post('/yixin?' + support.urlTail('token'))
          .send(replyWrapper('hi', 'ri', 'yue'))
          .expect(200)
          .end(function(err, res) {
            should.not.exist(err);
            var body = res.text.toString();
            body.should.include('<ToUserName><![CDATA[ri]]></ToUserName>');
            body.should.include('<FromUserName><![CDATA[yue]]></FromUserName>');
            body.should.match(/<CreateTime>\d{13}<\/CreateTime>/);
            body.should.include('<MsgType><![CDATA[text]]></MsgType>');
            body.should.include('<Content><![CDATA[hello]]></Content>');
            done();
          });
      });
    });
  });
});
